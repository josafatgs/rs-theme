<!-- Swiper CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

<article class="property-detail">
  <div class="container">
    <!-- Property Header -->
    <div class="property-header">
      <nav class="breadcrumb">
        <a href="{{ routes.root_url }}">Inicio</a>
        <span class="breadcrumb-separator">/</span>
        <a href="/collections/propiedades">Propiedades</a>
        <span class="breadcrumb-separator">/</span>
        <span class="breadcrumb-current">{{ product.title }}</span>
      </nav>
      
      <h1 class="property-title">{{ product.title }}</h1>
      
      {% if product.metafields.custom.location %}
        <div class="property-location">
          <svg class="location-icon" width="16" height="16" viewBox="0 0 24 24" fill="none">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" stroke="currentColor" stroke-width="2"/>
            <circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2"/>
          </svg>
          <span>{{ product.metafields.custom.location }}</span>
        </div>
      {% endif %}
      
      <div class="property-price">
        <span class="price-label">Precio:</span>
        <span class="price-amount">{{ product.price | money }}</span>
      </div>
    </div>

    <!-- Image Gallery with Swiper -->
    <div class="property-gallery">
      {% if product.images.size > 0 %}
        <!-- Main Swiper Gallery -->
        <div class="gallery-main">
          <div class="swiper gallery-main-swiper">
            <div class="swiper-wrapper">
              {% for image in product.images %}
                <div class="swiper-slide">
                  <img 
                    src="{{ image | img_url: '1000x750' }}" 
                    alt="{{ product.title }} - Imagen {{ forloop.index }}"
                    class="gallery-main-image"
                    loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                  >
                  <button class="gallery-fullscreen-btn" onclick="openLightbox({{ forloop.index0 }})">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                      <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </button>
                </div>
              {% endfor %}
            </div>
            
            <!-- Navigation buttons -->
            {% if product.images.size > 1 %}
              <div class="swiper-button-next"></div>
              <div class="swiper-button-prev"></div>
              <div class="swiper-pagination"></div>
            {% endif %}
          </div>
        </div>
        
        <!-- Thumbnail Gallery -->
        {% if product.images.size > 1 %}
          <div class="gallery-thumbs">
            <div class="swiper gallery-thumbs-swiper">
              <div class="swiper-wrapper">
                {% for image in product.images %}
                  <div class="swiper-slide">
                    <img 
                      src="{{ image | img_url: '150x100' }}" 
                      alt="{{ product.title }} - Miniatura {{ forloop.index }}"
                      class="gallery-thumb-image"
                      loading="lazy"
                    >
                  </div>
                {% endfor %}
              </div>
            </div>
          </div>
        {% endif %}
        
        <!-- Image Counter -->
        <div class="gallery-counter">
          <span class="counter-current">1</span>
          <span class="counter-separator">/</span>
          <span class="counter-total">{{ product.images.size }}</span>
        </div>
        
      {% else %}
        <div class="no-image">
          <div class="no-image-content">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none">
              <rect x="3" y="3" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
              <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="2"/>
              <polyline points="21,15 16,10 5,21" stroke="currentColor" stroke-width="2"/>
            </svg>
            <p>Sin im√°genes disponibles</p>
          </div>
        </div>
      {% endif %}
    </div>

    <!-- Lightbox Modal -->
    <div class="lightbox-modal" id="lightboxModal">
      <div class="lightbox-overlay" onclick="closeLightbox()"></div>
      <div class="lightbox-content">
        <button class="lightbox-close" onclick="closeLightbox()">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <line x1="18" y1="6" x2="6" y2="18" stroke="currentColor" stroke-width="2"/>
            <line x1="6" y1="6" x2="18" y2="18" stroke="currentColor" stroke-width="2"/>
          </svg>
        </button>
        
        <div class="swiper lightbox-swiper">
          <div class="swiper-wrapper">
            {% for image in product.images %}
              <div class="swiper-slide">
                <img 
                  src="{{ image | img_url: '1400x1050' }}" 
                  alt="{{ product.title }} - Imagen {{ forloop.index }}"
                  class="lightbox-image"
                >
              </div>
            {% endfor %}
          </div>
          
          {% if product.images.size > 1 %}
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
          {% endif %}
        </div>
        
        <div class="lightbox-counter">
          <span class="lightbox-current">1</span>
          <span>/</span>
          <span class="lightbox-total">{{ product.images.size }}</span>
        </div>
      </div>
    </div>

    <!-- Property Specifications -->
    <div class="property-specs">
      <h2>Especificaciones</h2>
      
      <div class="specs-grid">
        {% if product.metafields.custom.bedrooms %}
          <div class="spec-item">
            <span class="spec-icon">üõèÔ∏è</span>
            <span class="spec-label">Rec√°maras</span>
            <span class="spec-value">{{ product.metafields.custom.bedrooms }}</span>
          </div>
        {% endif %}
        
        {% if product.metafields.custom.bathrooms %}
          <div class="spec-item">
            <span class="spec-icon">üöø</span>
            <span class="spec-label">Ba√±os</span>
            <span class="spec-value">{{ product.metafields.custom.bathrooms }}</span>
          </div>
        {% endif %}
        
        {% if product.metafields.custom.square_meters %}
          <div class="spec-item">
            <span class="spec-icon">üìê</span>
            <span class="spec-label">√Årea</span>
            <span class="spec-value">{{ product.metafields.custom.square_meters }} m¬≤</span>
          </div>
        {% endif %}
        
        {% if product.metafields.custom.parking_spaces %}
          <div class="spec-item">
            <span class="spec-icon">üöó</span>
            <span class="spec-label">Estacionamiento</span>
            <span class="spec-value">{{ product.metafields.custom.parking_spaces }} espacio{% if product.metafields.custom.parking_spaces != 1 %}s{% endif %}</span>
          </div>
        {% endif %}
        
        {% if product.metafields.custom.property_type %}
          <div class="spec-item">
            <span class="spec-icon">üè†</span>
            <span class="spec-label">Tipo</span>
            <span class="spec-value">{{ product.metafields.custom.property_type | capitalize }}</span>
          </div>
        {% endif %}
        
        {% if product.metafields.custom.year_built %}
          <div class="spec-item">
            <span class="spec-icon">üìÖ</span>
            <span class="spec-label">A√±o de construcci√≥n</span>
            <span class="spec-value">{{ product.metafields.custom.year_built }}</span>
          </div>
        {% endif %}
      </div>
    </div>

    <!-- Property Description -->
    {% if product.description != blank %}
      <div class="property-description">
        <h2>Descripci√≥n</h2>
        <div class="description-content">
          {{ product.description }}
        </div>
      </div>
    {% endif %}

    <!-- Call to Action Buttons -->
    <div class="property-actions">
      <h2>¬øTe interesa esta propiedad?</h2>
      <div class="action-buttons">
        <a 
          href="https://wa.me/{{ settings.whatsapp_number | default: '521234567890' }}?text=Hola, me interesa la propiedad: {{ product.title | url_encode }} - {{ shop.url }}{{ product.url }}"
          target="_blank"
          class="btn btn--primary btn--whatsapp"
        >
          üì± Agendar Cita por WhatsApp
        </a>
        
        <a href="tel:{{ settings.phone_number | default: '+52 123 456 7890' }}" class="btn btn--secondary">
          üìû Llamar Ahora
        </a>
      </div>
    </div>

  </div>
</div>

  </div>
</article>

<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<!-- Product Gallery JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize thumbnail swiper first
  const galleryThumbs = new Swiper('.gallery-thumbs-swiper', {
    spaceBetween: 10,
    slidesPerView: 'auto',
    freeMode: true,
    watchSlidesProgress: true,
    breakpoints: {
      320: {
        slidesPerView: 3,
        spaceBetween: 8
      },
      480: {
        slidesPerView: 4,
        spaceBetween: 10
      },
      768: {
        slidesPerView: 5,
        spaceBetween: 12
      },
      1024: {
        slidesPerView: 6,
        spaceBetween: 15
      }
    }
  });

  // Initialize main gallery swiper
  const galleryMain = new Swiper('.gallery-main-swiper', {
    spaceBetween: 10,
    navigation: {
      nextEl: '.gallery-main .swiper-button-next',
      prevEl: '.gallery-main .swiper-button-prev',
    },
    pagination: {
      el: '.gallery-main .swiper-pagination',
      clickable: true,
    },
    thumbs: {
      swiper: galleryThumbs,
    },
    keyboard: {
      enabled: true,
    },
    mousewheel: {
      forceToAxis: true,
    },
    on: {
      slideChange: function() {
        updateCounter(this.activeIndex + 1, this.slides.length);
      }
    }
  });

  // Initialize lightbox swiper
  let lightboxSwiper;
  
  function initLightboxSwiper() {
    if (lightboxSwiper) {
      lightboxSwiper.destroy(true, true);
    }
    
    lightboxSwiper = new Swiper('.lightbox-swiper', {
      spaceBetween: 10,
      navigation: {
        nextEl: '.lightbox-content .swiper-button-next',
        prevEl: '.lightbox-content .swiper-button-prev',
      },
      keyboard: {
        enabled: true,
      },
      zoom: {
        maxRatio: 3,
        minRatio: 1
      },
      on: {
        slideChange: function() {
          updateLightboxCounter(this.activeIndex + 1, this.slides.length);
        }
      }
    });
  }

  // Update counter function
  function updateCounter(current, total) {
    const counterCurrent = document.querySelector('.counter-current');
    if (counterCurrent) {
      counterCurrent.textContent = current;
    }
  }

  // Update lightbox counter function
  function updateLightboxCounter(current, total) {
    const lightboxCurrent = document.querySelector('.lightbox-current');
    if (lightboxCurrent) {
      lightboxCurrent.textContent = current;
    }
  }

  // Lightbox functions
  window.openLightbox = function(index = 0) {
    const modal = document.getElementById('lightboxModal');
    modal.classList.add('active');
    document.body.classList.add('lightbox-open');
    
    // Initialize lightbox swiper if not already done
    if (!lightboxSwiper) {
      initLightboxSwiper();
    }
    
    // Go to specific slide
    if (lightboxSwiper) {
      lightboxSwiper.slideTo(index, 0);
      updateLightboxCounter(index + 1, lightboxSwiper.slides.length);
    }
  };

  window.closeLightbox = function() {
    const modal = document.getElementById('lightboxModal');
    modal.classList.remove('active');
    document.body.classList.remove('lightbox-open');
  };

  // Close lightbox with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeLightbox();
    }
  });

  // Auto-play functionality (optional)
  let autoplayInterval;
  
  function startAutoplay() {
    if (galleryMain && galleryMain.slides.length > 1) {
      autoplayInterval = setInterval(() => {
        if (galleryMain.isEnd) {
          galleryMain.slideTo(0);
        } else {
          galleryMain.slideNext();
        }
      }, 5000); // Change slide every 5 seconds
    }
  }

  function stopAutoplay() {
    if (autoplayInterval) {
      clearInterval(autoplayInterval);
      autoplayInterval = null;
    }
  }

  // Start autoplay on load (optional - remove if not wanted)
  // startAutoplay();

  // Pause autoplay on hover
  const galleryContainer = document.querySelector('.gallery-main');
  if (galleryContainer) {
    galleryContainer.addEventListener('mouseenter', stopAutoplay);
    galleryContainer.addEventListener('mouseleave', startAutoplay);
  }

  // Touch/swipe support for mobile
  let touchStartX = 0;
  let touchEndX = 0;

  galleryContainer?.addEventListener('touchstart', function(e) {
    touchStartX = e.changedTouches[0].screenX;
  });

  galleryContainer?.addEventListener('touchend', function(e) {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  });

  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;
    
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        // Swipe left - next slide
        galleryMain?.slideNext();
      } else {
        // Swipe right - previous slide
        galleryMain?.slidePrev();
      }
    }
  }
});
</script>

<!-- Product Data for JavaScript -->
<script>
  window.productData = {
    title: {{ product.title | json }},
    images: [
      {% for image in product.images %}
        {
          url: {{ image | img_url: '1400x1050' | json }},
          alt: {{ product.title | append: ' - Imagen ' | append: forloop.index | json }}
        }{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ],
    price: {{ product.price | money | json }},
    url: {{ shop.url | append: product.url | json }}
  };
</script>

  <!-- Structured Data -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Product",
    "name": {{ product.title | json }},
    "description": {{ product.description | strip_html | json }},
    "image": [
      {% for image in product.images limit: 5 %}
        {{ image | img_url: '800x600' | json }}{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ],
    "offers": {
      "@type": "Offer",
      "price": {{ product.price | divided_by: 100.0 | json }},
      "priceCurrency": {{ cart.currency.iso_code | json }},
      "availability": "https://schema.org/InStock",
      "url": {{ shop.url | append: product.url | json }}
    }{% if product.metafields.custom.city or product.metafields.custom.state or product.metafields.custom.postal_code %},
    "address": {
      "@type": "PostalAddress"{% if product.metafields.custom.city %},
      "addressLocality": {{ product.metafields.custom.city | json }}{% endif %}{% if product.metafields.custom.state %},
      "addressRegion": {{ product.metafields.custom.state | json }}{% endif %}{% if product.metafields.custom.postal_code %},
      "postalCode": {{ product.metafields.custom.postal_code | json }}{% endif %}{% if product.metafields.custom.neighborhood %},
      "streetAddress": {{ product.metafields.custom.neighborhood | json }}{% endif %}
    }{% endif %}{% if product.metafields.custom.square_meters %},
    "floorSize": {
      "@type": "QuantitativeValue",
      "value": {{ product.metafields.custom.square_meters | json }},
      "unitCode": "MTK"
    }{% endif %}{% if product.metafields.custom.bedrooms %},
    "numberOfRooms": {{ product.metafields.custom.bedrooms | json }}{% endif %}{% if product.metafields.custom.year_built %},
    "yearBuilt": {{ product.metafields.custom.year_built | json }}{% endif %}{% if product.metafields.custom.latitude and product.metafields.custom.longitude %},
    "geo": {
      "@type": "GeoCoordinates",
      "latitude": {{ product.metafields.custom.latitude | json }},
      "longitude": {{ product.metafields.custom.longitude | json }}
    }{% endif %}
  }
  </script>
</article>

<!-- Include WhatsApp Float -->
{% render 'whatsapp-float' %}